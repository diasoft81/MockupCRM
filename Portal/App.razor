@using System.Reflection
@using CoreNET.Blazor.Shared.Layout

<CascadingAuthenticationState>
    <Router AppAssembly="@typeof(App).Assembly" AdditionalAssemblies="@additionalAssemblies">
        <Found Context="routeData">
            @if (UserService.IsLoggedIn)
            {
                <LayoutSwitcher RouteData="@routeData" />
            }
            else
            {
                <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(EmptyLayout)">
                    <NotAuthorized>
                        <p class="text-danger">You are not authorized to access this page. <a href="/">Back to Home</a></p>
                    </NotAuthorized>
                    <Authorizing>
                        <p>Authorizing...</p>
                    </Authorizing>
                </AuthorizeRouteView>
                <FocusOnNavigate RouteData="@routeData" Selector="h1" />
            }
        </Found>
        <NotFound>
            <LayoutSwitcher>
                <PageTitle>Not found</PageTitle>
                <p role="alert">Sorry, there's nothing at this address.</p>
            </LayoutSwitcher>
        </NotFound>
    </Router>
</CascadingAuthenticationState>

@code
{
    private readonly Assembly[] additionalAssemblies = new[]{
        typeof(CoreNET.Blazor.Shared.ServiceContainer).Assembly
    };
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        AppState.Params.AppTitle = "Portal";
        AppState.ShowMenuSettings = false;
    }
}