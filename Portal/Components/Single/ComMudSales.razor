@using CoreNET.Lib.Models.References
<MudAutocomplete T="string"
                 Label="Sales Person"
                 Variant="Variant.Filled"
                 Dense="true"
                 Value="selectedSales"
                 SearchFunc="SearchSales"
                 ToStringFunc="@(s => s)"
                 ValueChanged="OnFilterChanged"
                 ResetValueOnEmptyText="true"
                 Clearable="true"
                 Adornment="Adornment.End"
                 AdornmentIcon="@Icons.Material.Filled.Search" />


@code {
    [Parameter] public EventCallback<DashboardFilters>? OnFilterChangedHandler { get; set; }
    [Parameter] public DashboardFilters Filters { get; set; }

    private string selectedSales;
    private List<string> salesPersons = new() { "Andi", "Budi", "Citra", "Dewi" }; // contoh data

    private Task<IEnumerable<string>> SearchSales(string value, CancellationToken token)
    {
        if (string.IsNullOrWhiteSpace(value))
            return Task.FromResult(salesPersons.AsEnumerable());

        var result = salesPersons
            .Where(x => x.Contains(value, StringComparison.InvariantCultureIgnoreCase));

        return Task.FromResult(result);
    }

    private async Task OnFilterChanged(string newValue)
    {
        selectedSales = newValue;
        if (OnFilterChangedHandler.HasValue)
            await OnFilterChangedHandler.Value.InvokeAsync(Filters);
    }
}

